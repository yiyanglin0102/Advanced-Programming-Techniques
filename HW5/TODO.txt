db (test) -> collections (phdthesis) -> insert (object)
show dbs	use test; show collections	db.inventory.insertMany([])
						db.inventory.insertOne({})
						db.phdthesis.insertOne({})
		show collections		
		db.inventory.drop()
		db.phdthesis.drop()

db.phdthesis.insertMany([ { key: 'phd/Hoff2002', mdate: '2017-01-06', author: 'Gerd Hoff', title: 'Ein Verfahren zur thematisch spezialisierten Suche im Web und seine Realisierung im Prototypen HomePageSearch', year: '2002', school: 'University of Trier, Germany', pages: '1231-315', isbn: '123978-3-86596-263-8', ee: 'http://ubt.opus.hbz-nrw.de/volltexte/2004/146/' }, { key: 'phd/Seltzer92', mdate: '2015-05-21', author: 'Margo I. Seltzer', title: 'File System Performance and Transaction Support.', year: '1992', school: 'University of California at Berkeley', pages: '1231-315', isbn: '123978-3-86596-263-8', url: 'http://db.cs.berkeley.edu/papers/ERL-M93-01.pdf' }])


db.getCollectionNames().forEach((c) => { db[c].find().forEach((d) => { print(c); printjson(d); }); })

Write a query to count the number of given keywords per year, e.g. “gradient descent”, “wearable" keywords, for at least three years. The query should be implemented in both MySQL and MongoDB. Therefore, your project should have at least two separate classes, one for MySQL and one for MongoDB.


SELECT * FROM inproceedings WHERE title LIKE '%{$computer}%'


SELECT *
FROM inproceedings
WHERE INSTR(title, '{$love}') > 0;


TODOs
_____

Add tables from XML
Query from MongoDB









